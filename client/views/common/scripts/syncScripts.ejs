<script src="https://www.youtube.com/iframe_api" type="text/javascript"></script>
<script>
var player;
var socket;
var DESYNC_RANGE = 1;

function onYouTubeIframeAPIReady() {
	$(function () {
		socket = io();
		console.log("SYNC SCRIPT CARGADO");
	
		//TODO: esto tiene que ejecutarse una vez que le doy al boton de play y no directamente.
		player = new YT.Player('mainPlayer', {
			events: {
				'onReady': function(e){
					console.log("[Sync] ready.");
					startInterval();
					syncUser();
				},
				'onStateChange': function(e){
					console.log("[Sync] changed.");
				}
			}
		});
		
		socket.on('sync', function(data){
			switch (data.key){
				case "ytb_play":
					if (!OP && player.getPlayerState() === YT.PlayerState.PLAYING){
						//tolerancia de tiempo desincronizado
						if (player.getCurrentTime() < (data.value - DESYNC_RANGE) || player.getCurrentTime() > (data.value + DESYNC_RANGE)){
							player.seekTo(data.value);
						}
					}
				break;
				case "ytb_pause":
					if (!OP){
						if (data.value){
							player.pauseVideo();
						} else {
							player.playVideo();
						}
					}
				break;
				case "ytb_change":
					player.loadVideoById(data.value);
			}
		});
		
		$(document).on("click", "#syncPlay", function(e){
			let url = $("#syncURL").val();
			changeVideo(youtubeParser(url));
		});
		
	});
}

function synctst(){
	socket.emit("test", "tst");
}

function syncUser(){
	//enviar se√±al de que esta conectado
	socket.emit("syncme", {key: "ytb_change"});
}

//TODO: hacer que esta opcion solo le funcione al op (check del lado del server.)
function changeVideo(id){
	if (OP) {
		socket.emit("sync", {key: "ytb_change", value: id});
		socket.emit("sync", {key: "ytb_url", value: id});
		player.loadVideoById(id);
	}
}

//TODO: hacer que esta opcion solo le funcione al op (check del lado del server.)
function startInterval(){
	setInterval(function(){
		if (OP){
			//socket.emit("sync", {key: "ytb_url", value: youtubeParser(player.getVideoUrl())});
		}
		if (OP && player.getPlayerState() === YT.PlayerState.PLAYING){
			//accion al estar reproduciendo.
			socket.emit("sync", {key: "ytb_play", value: player.getCurrentTime()});
			socket.emit("sync", {key: "ytb_pause", value: false});
			
		}
		if (OP && player.getPlayerState() === YT.PlayerState.PAUSED){
			socket.emit("sync", {key: "ytb_pause", value: true});
		}
	}, 1000);
}

//copy-paste del lado del cliente
function youtubeParser(url){
	console.log(url);
	let regExp = /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/;
	let match = url.match(regExp);
	return (match && match[2].length == 11) ? match[2] : null;
}

</script>